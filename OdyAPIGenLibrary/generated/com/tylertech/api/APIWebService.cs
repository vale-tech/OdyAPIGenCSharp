//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.7.3081.0.
// 
namespace generated.com.tylertech.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="APIWebServiceSoap", Namespace="http://www.tylertech.com/")]
    public partial class APIWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback OdysseyTxnExecutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyTxnExecutionRollbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyTxnExecutionAllowFaultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyTxnExecutionRollbackAllowFaultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyTxnExecutionWithRetryOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyTxnExecutionRollbackWithRetryOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyTxnExecutionWithRetryAllowFaultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyTxnExecutionRollbackWithRetryAllowFaultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyMsgExecutionOperationCompleted;
        
        private System.Threading.SendOrPostCallback OdysseyMsgExecutionAllowFaultsOperationCompleted;
        
        /// <remarks/>
        public APIWebService() {
            this.Url = "http://wcody17devapp/WebServices/APIWebService.asmx";
        }
        
        /// <remarks/>
        public event OdysseyTxnExecutionCompletedEventHandler OdysseyTxnExecutionCompleted;
        
        /// <remarks/>
        public event OdysseyTxnExecutionRollbackCompletedEventHandler OdysseyTxnExecutionRollbackCompleted;
        
        /// <remarks/>
        public event OdysseyTxnExecutionAllowFaultsCompletedEventHandler OdysseyTxnExecutionAllowFaultsCompleted;
        
        /// <remarks/>
        public event OdysseyTxnExecutionRollbackAllowFaultsCompletedEventHandler OdysseyTxnExecutionRollbackAllowFaultsCompleted;
        
        /// <remarks/>
        public event OdysseyTxnExecutionWithRetryCompletedEventHandler OdysseyTxnExecutionWithRetryCompleted;
        
        /// <remarks/>
        public event OdysseyTxnExecutionRollbackWithRetryCompletedEventHandler OdysseyTxnExecutionRollbackWithRetryCompleted;
        
        /// <remarks/>
        public event OdysseyTxnExecutionWithRetryAllowFaultsCompletedEventHandler OdysseyTxnExecutionWithRetryAllowFaultsCompleted;
        
        /// <remarks/>
        public event OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompletedEventHandler OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompleted;
        
        /// <remarks/>
        public event OdysseyMsgExecutionCompletedEventHandler OdysseyMsgExecutionCompleted;
        
        /// <remarks/>
        public event OdysseyMsgExecutionAllowFaultsCompletedEventHandler OdysseyMsgExecutionAllowFaultsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyTxnExecution", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyTxnExecution(string odysseyTransactionXML, string siteKey) {
            object[] results = this.Invoke("OdysseyTxnExecution", new object[] {
                        odysseyTransactionXML,
                        siteKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyTxnExecution(string odysseyTransactionXML, string siteKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyTxnExecution", new object[] {
                        odysseyTransactionXML,
                        siteKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyTxnExecution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionAsync(string odysseyTransactionXML, string siteKey) {
            this.OdysseyTxnExecutionAsync(odysseyTransactionXML, siteKey, null);
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionAsync(string odysseyTransactionXML, string siteKey, object userState) {
            if ((this.OdysseyTxnExecutionOperationCompleted == null)) {
                this.OdysseyTxnExecutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyTxnExecutionOperationCompleted);
            }
            this.InvokeAsync("OdysseyTxnExecution", new object[] {
                        odysseyTransactionXML,
                        siteKey}, this.OdysseyTxnExecutionOperationCompleted, userState);
        }
        
        private void OnOdysseyTxnExecutionOperationCompleted(object arg) {
            if ((this.OdysseyTxnExecutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyTxnExecutionCompleted(this, new OdysseyTxnExecutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyTxnExecutionRollback", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyTxnExecutionRollback(string odysseyTransactionXML, string siteKey) {
            object[] results = this.Invoke("OdysseyTxnExecutionRollback", new object[] {
                        odysseyTransactionXML,
                        siteKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyTxnExecutionRollback(string odysseyTransactionXML, string siteKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyTxnExecutionRollback", new object[] {
                        odysseyTransactionXML,
                        siteKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyTxnExecutionRollback(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionRollbackAsync(string odysseyTransactionXML, string siteKey) {
            this.OdysseyTxnExecutionRollbackAsync(odysseyTransactionXML, siteKey, null);
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionRollbackAsync(string odysseyTransactionXML, string siteKey, object userState) {
            if ((this.OdysseyTxnExecutionRollbackOperationCompleted == null)) {
                this.OdysseyTxnExecutionRollbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyTxnExecutionRollbackOperationCompleted);
            }
            this.InvokeAsync("OdysseyTxnExecutionRollback", new object[] {
                        odysseyTransactionXML,
                        siteKey}, this.OdysseyTxnExecutionRollbackOperationCompleted, userState);
        }
        
        private void OnOdysseyTxnExecutionRollbackOperationCompleted(object arg) {
            if ((this.OdysseyTxnExecutionRollbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyTxnExecutionRollbackCompleted(this, new OdysseyTxnExecutionRollbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyTxnExecutionAllowFaults", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyTxnExecutionAllowFaults(string odysseyTransactionXML, string siteKey) {
            object[] results = this.Invoke("OdysseyTxnExecutionAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyTxnExecutionAllowFaults(string odysseyTransactionXML, string siteKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyTxnExecutionAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyTxnExecutionAllowFaults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionAllowFaultsAsync(string odysseyTransactionXML, string siteKey) {
            this.OdysseyTxnExecutionAllowFaultsAsync(odysseyTransactionXML, siteKey, null);
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionAllowFaultsAsync(string odysseyTransactionXML, string siteKey, object userState) {
            if ((this.OdysseyTxnExecutionAllowFaultsOperationCompleted == null)) {
                this.OdysseyTxnExecutionAllowFaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyTxnExecutionAllowFaultsOperationCompleted);
            }
            this.InvokeAsync("OdysseyTxnExecutionAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey}, this.OdysseyTxnExecutionAllowFaultsOperationCompleted, userState);
        }
        
        private void OnOdysseyTxnExecutionAllowFaultsOperationCompleted(object arg) {
            if ((this.OdysseyTxnExecutionAllowFaultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyTxnExecutionAllowFaultsCompleted(this, new OdysseyTxnExecutionAllowFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyTxnExecutionRollbackAllowFaults", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyTxnExecutionRollbackAllowFaults(string odysseyTransactionXML, string siteKey) {
            object[] results = this.Invoke("OdysseyTxnExecutionRollbackAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyTxnExecutionRollbackAllowFaults(string odysseyTransactionXML, string siteKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyTxnExecutionRollbackAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyTxnExecutionRollbackAllowFaults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionRollbackAllowFaultsAsync(string odysseyTransactionXML, string siteKey) {
            this.OdysseyTxnExecutionRollbackAllowFaultsAsync(odysseyTransactionXML, siteKey, null);
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionRollbackAllowFaultsAsync(string odysseyTransactionXML, string siteKey, object userState) {
            if ((this.OdysseyTxnExecutionRollbackAllowFaultsOperationCompleted == null)) {
                this.OdysseyTxnExecutionRollbackAllowFaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyTxnExecutionRollbackAllowFaultsOperationCompleted);
            }
            this.InvokeAsync("OdysseyTxnExecutionRollbackAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey}, this.OdysseyTxnExecutionRollbackAllowFaultsOperationCompleted, userState);
        }
        
        private void OnOdysseyTxnExecutionRollbackAllowFaultsOperationCompleted(object arg) {
            if ((this.OdysseyTxnExecutionRollbackAllowFaultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyTxnExecutionRollbackAllowFaultsCompleted(this, new OdysseyTxnExecutionRollbackAllowFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyTxnExecutionWithRetry", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyTxnExecutionWithRetry(string odysseyTransactionXML, string siteKey, int retryCount) {
            object[] results = this.Invoke("OdysseyTxnExecutionWithRetry", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyTxnExecutionWithRetry(string odysseyTransactionXML, string siteKey, int retryCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyTxnExecutionWithRetry", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyTxnExecutionWithRetry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionWithRetryAsync(string odysseyTransactionXML, string siteKey, int retryCount) {
            this.OdysseyTxnExecutionWithRetryAsync(odysseyTransactionXML, siteKey, retryCount, null);
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionWithRetryAsync(string odysseyTransactionXML, string siteKey, int retryCount, object userState) {
            if ((this.OdysseyTxnExecutionWithRetryOperationCompleted == null)) {
                this.OdysseyTxnExecutionWithRetryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyTxnExecutionWithRetryOperationCompleted);
            }
            this.InvokeAsync("OdysseyTxnExecutionWithRetry", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount}, this.OdysseyTxnExecutionWithRetryOperationCompleted, userState);
        }
        
        private void OnOdysseyTxnExecutionWithRetryOperationCompleted(object arg) {
            if ((this.OdysseyTxnExecutionWithRetryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyTxnExecutionWithRetryCompleted(this, new OdysseyTxnExecutionWithRetryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyTxnExecutionRollbackWithRetry", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyTxnExecutionRollbackWithRetry(string odysseyTransactionXML, string siteKey, int retryCount) {
            object[] results = this.Invoke("OdysseyTxnExecutionRollbackWithRetry", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyTxnExecutionRollbackWithRetry(string odysseyTransactionXML, string siteKey, int retryCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyTxnExecutionRollbackWithRetry", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyTxnExecutionRollbackWithRetry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionRollbackWithRetryAsync(string odysseyTransactionXML, string siteKey, int retryCount) {
            this.OdysseyTxnExecutionRollbackWithRetryAsync(odysseyTransactionXML, siteKey, retryCount, null);
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionRollbackWithRetryAsync(string odysseyTransactionXML, string siteKey, int retryCount, object userState) {
            if ((this.OdysseyTxnExecutionRollbackWithRetryOperationCompleted == null)) {
                this.OdysseyTxnExecutionRollbackWithRetryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyTxnExecutionRollbackWithRetryOperationCompleted);
            }
            this.InvokeAsync("OdysseyTxnExecutionRollbackWithRetry", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount}, this.OdysseyTxnExecutionRollbackWithRetryOperationCompleted, userState);
        }
        
        private void OnOdysseyTxnExecutionRollbackWithRetryOperationCompleted(object arg) {
            if ((this.OdysseyTxnExecutionRollbackWithRetryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyTxnExecutionRollbackWithRetryCompleted(this, new OdysseyTxnExecutionRollbackWithRetryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyTxnExecutionWithRetryAllowFaults", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyTxnExecutionWithRetryAllowFaults(string odysseyTransactionXML, string siteKey, int retryCount) {
            object[] results = this.Invoke("OdysseyTxnExecutionWithRetryAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyTxnExecutionWithRetryAllowFaults(string odysseyTransactionXML, string siteKey, int retryCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyTxnExecutionWithRetryAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyTxnExecutionWithRetryAllowFaults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionWithRetryAllowFaultsAsync(string odysseyTransactionXML, string siteKey, int retryCount) {
            this.OdysseyTxnExecutionWithRetryAllowFaultsAsync(odysseyTransactionXML, siteKey, retryCount, null);
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionWithRetryAllowFaultsAsync(string odysseyTransactionXML, string siteKey, int retryCount, object userState) {
            if ((this.OdysseyTxnExecutionWithRetryAllowFaultsOperationCompleted == null)) {
                this.OdysseyTxnExecutionWithRetryAllowFaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyTxnExecutionWithRetryAllowFaultsOperationCompleted);
            }
            this.InvokeAsync("OdysseyTxnExecutionWithRetryAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount}, this.OdysseyTxnExecutionWithRetryAllowFaultsOperationCompleted, userState);
        }
        
        private void OnOdysseyTxnExecutionWithRetryAllowFaultsOperationCompleted(object arg) {
            if ((this.OdysseyTxnExecutionWithRetryAllowFaultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyTxnExecutionWithRetryAllowFaultsCompleted(this, new OdysseyTxnExecutionWithRetryAllowFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyTxnExecutionRollbackWithRetryAllowFaults", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyTxnExecutionRollbackWithRetryAllowFaults(string odysseyTransactionXML, string siteKey, int retryCount) {
            object[] results = this.Invoke("OdysseyTxnExecutionRollbackWithRetryAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyTxnExecutionRollbackWithRetryAllowFaults(string odysseyTransactionXML, string siteKey, int retryCount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyTxnExecutionRollbackWithRetryAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyTxnExecutionRollbackWithRetryAllowFaults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionRollbackWithRetryAllowFaultsAsync(string odysseyTransactionXML, string siteKey, int retryCount) {
            this.OdysseyTxnExecutionRollbackWithRetryAllowFaultsAsync(odysseyTransactionXML, siteKey, retryCount, null);
        }
        
        /// <remarks/>
        public void OdysseyTxnExecutionRollbackWithRetryAllowFaultsAsync(string odysseyTransactionXML, string siteKey, int retryCount, object userState) {
            if ((this.OdysseyTxnExecutionRollbackWithRetryAllowFaultsOperationCompleted == null)) {
                this.OdysseyTxnExecutionRollbackWithRetryAllowFaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyTxnExecutionRollbackWithRetryAllowFaultsOperationCompleted);
            }
            this.InvokeAsync("OdysseyTxnExecutionRollbackWithRetryAllowFaults", new object[] {
                        odysseyTransactionXML,
                        siteKey,
                        retryCount}, this.OdysseyTxnExecutionRollbackWithRetryAllowFaultsOperationCompleted, userState);
        }
        
        private void OnOdysseyTxnExecutionRollbackWithRetryAllowFaultsOperationCompleted(object arg) {
            if ((this.OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompleted(this, new OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyMsgExecution", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyMsgExecution(string odysseyMessageXML, string siteKey) {
            object[] results = this.Invoke("OdysseyMsgExecution", new object[] {
                        odysseyMessageXML,
                        siteKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyMsgExecution(string odysseyMessageXML, string siteKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyMsgExecution", new object[] {
                        odysseyMessageXML,
                        siteKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyMsgExecution(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyMsgExecutionAsync(string odysseyMessageXML, string siteKey) {
            this.OdysseyMsgExecutionAsync(odysseyMessageXML, siteKey, null);
        }
        
        /// <remarks/>
        public void OdysseyMsgExecutionAsync(string odysseyMessageXML, string siteKey, object userState) {
            if ((this.OdysseyMsgExecutionOperationCompleted == null)) {
                this.OdysseyMsgExecutionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyMsgExecutionOperationCompleted);
            }
            this.InvokeAsync("OdysseyMsgExecution", new object[] {
                        odysseyMessageXML,
                        siteKey}, this.OdysseyMsgExecutionOperationCompleted, userState);
        }
        
        private void OnOdysseyMsgExecutionOperationCompleted(object arg) {
            if ((this.OdysseyMsgExecutionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyMsgExecutionCompleted(this, new OdysseyMsgExecutionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/OdysseyMsgExecutionAllowFaults", RequestNamespace="http://www.tylertech.com/", ResponseNamespace="http://www.tylertech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OdysseyMsgExecutionAllowFaults(string odysseyMessageXML, string siteKey) {
            object[] results = this.Invoke("OdysseyMsgExecutionAllowFaults", new object[] {
                        odysseyMessageXML,
                        siteKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOdysseyMsgExecutionAllowFaults(string odysseyMessageXML, string siteKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("OdysseyMsgExecutionAllowFaults", new object[] {
                        odysseyMessageXML,
                        siteKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndOdysseyMsgExecutionAllowFaults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OdysseyMsgExecutionAllowFaultsAsync(string odysseyMessageXML, string siteKey) {
            this.OdysseyMsgExecutionAllowFaultsAsync(odysseyMessageXML, siteKey, null);
        }
        
        /// <remarks/>
        public void OdysseyMsgExecutionAllowFaultsAsync(string odysseyMessageXML, string siteKey, object userState) {
            if ((this.OdysseyMsgExecutionAllowFaultsOperationCompleted == null)) {
                this.OdysseyMsgExecutionAllowFaultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOdysseyMsgExecutionAllowFaultsOperationCompleted);
            }
            this.InvokeAsync("OdysseyMsgExecutionAllowFaults", new object[] {
                        odysseyMessageXML,
                        siteKey}, this.OdysseyMsgExecutionAllowFaultsOperationCompleted, userState);
        }
        
        private void OnOdysseyMsgExecutionAllowFaultsOperationCompleted(object arg) {
            if ((this.OdysseyMsgExecutionAllowFaultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OdysseyMsgExecutionAllowFaultsCompleted(this, new OdysseyMsgExecutionAllowFaultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyTxnExecutionCompletedEventHandler(object sender, OdysseyTxnExecutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyTxnExecutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyTxnExecutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyTxnExecutionRollbackCompletedEventHandler(object sender, OdysseyTxnExecutionRollbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyTxnExecutionRollbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyTxnExecutionRollbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyTxnExecutionAllowFaultsCompletedEventHandler(object sender, OdysseyTxnExecutionAllowFaultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyTxnExecutionAllowFaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyTxnExecutionAllowFaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyTxnExecutionRollbackAllowFaultsCompletedEventHandler(object sender, OdysseyTxnExecutionRollbackAllowFaultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyTxnExecutionRollbackAllowFaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyTxnExecutionRollbackAllowFaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyTxnExecutionWithRetryCompletedEventHandler(object sender, OdysseyTxnExecutionWithRetryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyTxnExecutionWithRetryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyTxnExecutionWithRetryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyTxnExecutionRollbackWithRetryCompletedEventHandler(object sender, OdysseyTxnExecutionRollbackWithRetryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyTxnExecutionRollbackWithRetryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyTxnExecutionRollbackWithRetryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyTxnExecutionWithRetryAllowFaultsCompletedEventHandler(object sender, OdysseyTxnExecutionWithRetryAllowFaultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyTxnExecutionWithRetryAllowFaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyTxnExecutionWithRetryAllowFaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompletedEventHandler(object sender, OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyTxnExecutionRollbackWithRetryAllowFaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyMsgExecutionCompletedEventHandler(object sender, OdysseyMsgExecutionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyMsgExecutionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyMsgExecutionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void OdysseyMsgExecutionAllowFaultsCompletedEventHandler(object sender, OdysseyMsgExecutionAllowFaultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OdysseyMsgExecutionAllowFaultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OdysseyMsgExecutionAllowFaultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
