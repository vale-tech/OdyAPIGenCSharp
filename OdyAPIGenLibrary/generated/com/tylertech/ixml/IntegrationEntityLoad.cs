//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.7.3081.0.
// 
namespace generated.com.tylertech.ixml {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IntegrationEntityLoadSoap", Namespace="http://www.tylertech.com")]
    public partial class IntegrationEntityLoad : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoadIntegrationXmlOperationCompleted;
        
        /// <remarks/>
        public IntegrationEntityLoad() {
            this.Url = "http://wcody17devapp/Infrastructure/Integration/IntegrationEntityLoad.asmx";
        }
        
        /// <remarks/>
        public event LoadIntegrationXmlCompletedEventHandler LoadIntegrationXmlCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.tylertech.com/LoadIntegrationXml", RequestNamespace="http://www.tylertech.com", ResponseNamespace="http://www.tylertech.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoadIntegrationXml(string siteId, string agency, string pageMode, string entityIdentifier, string loadXml) {
            object[] results = this.Invoke("LoadIntegrationXml", new object[] {
                        siteId,
                        agency,
                        pageMode,
                        entityIdentifier,
                        loadXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoadIntegrationXml(string siteId, string agency, string pageMode, string entityIdentifier, string loadXml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoadIntegrationXml", new object[] {
                        siteId,
                        agency,
                        pageMode,
                        entityIdentifier,
                        loadXml}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLoadIntegrationXml(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoadIntegrationXmlAsync(string siteId, string agency, string pageMode, string entityIdentifier, string loadXml) {
            this.LoadIntegrationXmlAsync(siteId, agency, pageMode, entityIdentifier, loadXml, null);
        }
        
        /// <remarks/>
        public void LoadIntegrationXmlAsync(string siteId, string agency, string pageMode, string entityIdentifier, string loadXml, object userState) {
            if ((this.LoadIntegrationXmlOperationCompleted == null)) {
                this.LoadIntegrationXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadIntegrationXmlOperationCompleted);
            }
            this.InvokeAsync("LoadIntegrationXml", new object[] {
                        siteId,
                        agency,
                        pageMode,
                        entityIdentifier,
                        loadXml}, this.LoadIntegrationXmlOperationCompleted, userState);
        }
        
        private void OnLoadIntegrationXmlOperationCompleted(object arg) {
            if ((this.LoadIntegrationXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadIntegrationXmlCompleted(this, new LoadIntegrationXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    public delegate void LoadIntegrationXmlCompletedEventHandler(object sender, LoadIntegrationXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.3081.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadIntegrationXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadIntegrationXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
