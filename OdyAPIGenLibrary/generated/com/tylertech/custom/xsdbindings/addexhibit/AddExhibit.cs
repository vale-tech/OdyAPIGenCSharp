//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.7.3081.0.
// 
namespace generated.com.tylertech.custom.xsdbindings.addexhibit {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.3081.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://common.namespace/AddExhibit")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://common.namespace/AddExhibit", IsNullable=false)]
    public partial class Message {
        
        private string caseIDField;
        
        private AddExhibitOnBehalfOf onBehalfOfField;
        
        private string exhibitNumberField;
        
        private string caseExhibitIDField;
        
        private string exhibitTypeField;
        
        private string descriptionField;
        
        private AddExhibitExhibitSource exhibitSourceField;
        
        private AddExhibitReturnTo returnToField;
        
        private string projectedReturnField;
        
        private string projectedDestructionField;
        
        private string commentField;
        
        private string recordingDateField;
        
        private string recordingReelField;
        
        private string recordingCommentField;
        
        private LOCALADDEXHIBIT messageTypeField;
        
        private string nodeIDField;
        
        private string referenceNumberField;
        
        private string userIDField;
        
        private string sourceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string CaseID {
            get {
                return this.caseIDField;
            }
            set {
                this.caseIDField = value;
            }
        }
        
        /// <remarks/>
        public AddExhibitOnBehalfOf OnBehalfOf {
            get {
                return this.onBehalfOfField;
            }
            set {
                this.onBehalfOfField = value;
            }
        }
        
        /// <remarks/>
        public string ExhibitNumber {
            get {
                return this.exhibitNumberField;
            }
            set {
                this.exhibitNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CaseExhibitID {
            get {
                return this.caseExhibitIDField;
            }
            set {
                this.caseExhibitIDField = value;
            }
        }
        
        /// <remarks/>
        public string ExhibitType {
            get {
                return this.exhibitTypeField;
            }
            set {
                this.exhibitTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public AddExhibitExhibitSource ExhibitSource {
            get {
                return this.exhibitSourceField;
            }
            set {
                this.exhibitSourceField = value;
            }
        }
        
        /// <remarks/>
        public AddExhibitReturnTo ReturnTo {
            get {
                return this.returnToField;
            }
            set {
                this.returnToField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectedReturn {
            get {
                return this.projectedReturnField;
            }
            set {
                this.projectedReturnField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectedDestruction {
            get {
                return this.projectedDestructionField;
            }
            set {
                this.projectedDestructionField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public string RecordingDate {
            get {
                return this.recordingDateField;
            }
            set {
                this.recordingDateField = value;
            }
        }
        
        /// <remarks/>
        public string RecordingReel {
            get {
                return this.recordingReelField;
            }
            set {
                this.recordingReelField = value;
            }
        }
        
        /// <remarks/>
        public string RecordingComment {
            get {
                return this.recordingCommentField;
            }
            set {
                this.recordingCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LOCALADDEXHIBIT MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string NodeID {
            get {
                return this.nodeIDField;
            }
            set {
                this.nodeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.3081.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AddExhibit.OnBehalfOf", Namespace="http://common.namespace/AddExhibit")]
    public partial class AddExhibitOnBehalfOf {
        
        private string itemField;
        
        private ItemChoiceType itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConnectionType", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("Other", typeof(string), DataType="normalizedString")]
        [System.Xml.Serialization.XmlElementAttribute("SubmittedByCourt", typeof(string), DataType="normalizedString")]
        [System.Xml.Serialization.XmlElementAttribute("SubmittedByJoint", typeof(string), DataType="normalizedString")]
        [System.Xml.Serialization.XmlElementAttribute("SubmittedByOther", typeof(string), DataType="normalizedString")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.3081.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://common.namespace/AddExhibit", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        ConnectionType,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        SubmittedByCourt,
        
        /// <remarks/>
        SubmittedByJoint,
        
        /// <remarks/>
        SubmittedByOther,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.3081.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AddExhibit.ReturnTo", Namespace="http://common.namespace/AddExhibit")]
    public partial class AddExhibitReturnTo {
        
        private AddExhibitPartyType partyTypeField;
        
        private string[] casePartyField;
        
        private string partyDescriptionField;
        
        private string contactInfoField;
        
        private string agencyField;
        
        /// <remarks/>
        public AddExhibitPartyType PartyType {
            get {
                return this.partyTypeField;
            }
            set {
                this.partyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CaseParty", DataType="integer")]
        public string[] CaseParty {
            get {
                return this.casePartyField;
            }
            set {
                this.casePartyField = value;
            }
        }
        
        /// <remarks/>
        public string PartyDescription {
            get {
                return this.partyDescriptionField;
            }
            set {
                this.partyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ContactInfo {
            get {
                return this.contactInfoField;
            }
            set {
                this.contactInfoField = value;
            }
        }
        
        /// <remarks/>
        public string Agency {
            get {
                return this.agencyField;
            }
            set {
                this.agencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.3081.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AddExhibit.PartyType", Namespace="http://common.namespace/AddExhibit")]
    public enum AddExhibitPartyType {
        
        /// <remarks/>
        CaseParty,
        
        /// <remarks/>
        NonCaseParty,
        
        /// <remarks/>
        Agency,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.3081.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="AddExhibit.ExhibitSource", Namespace="http://common.namespace/AddExhibit")]
    public partial class AddExhibitExhibitSource {
        
        private string[] casePartyField;
        
        private string itemField;
        
        private ItemChoiceType1 itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CaseParty", DataType="integer")]
        public string[] CaseParty {
            get {
                return this.casePartyField;
            }
            set {
                this.casePartyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SubmittedByCourt", typeof(string), DataType="normalizedString")]
        [System.Xml.Serialization.XmlElementAttribute("SubmittedByJoint", typeof(string), DataType="normalizedString")]
        [System.Xml.Serialization.XmlElementAttribute("SubmittedByOther", typeof(string), DataType="normalizedString")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType1 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.3081.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://common.namespace/AddExhibit", IncludeInSchema=false)]
    public enum ItemChoiceType1 {
        
        /// <remarks/>
        SubmittedByCourt,
        
        /// <remarks/>
        SubmittedByJoint,
        
        /// <remarks/>
        SubmittedByOther,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.7.3081.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="LOCAL.ADDEXHIBIT", Namespace="http://common.namespace/AddExhibit")]
    public enum LOCALADDEXHIBIT {
        
        /// <remarks/>
        AddExhibit,
    }
}
